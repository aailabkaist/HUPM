import networkx as nx
from networkx.drawing.nx_pydot import graphviz_layout
import matplotlib.pyplot as plt
from util import *
dataset = 'cub2'
w_edges = [(0, 13, 0.958), (0, 95, 0.982), (0, 136, 0.96), (0, 138, 0.996), (0, 139, 0.976), (1, 14, 0.975), (1, 116, 0.99), (1, 117, 0.989), (1, 118, 0.891), (1, 119, 0.975), (2, 71, 0.998), (2, 141, 0.944), (2, 154, 0.993), (3, 16, 0.901), (3, 17, 0.913), (3, 18, 0.591), (3, 54, 0.751), (3, 55, 0.779), (3, 56, 0.963), (3, 57, 0.627), (3, 108, 0.906), (3, 109, 0.904), (3, 110, 0.91), (3, 111, 0.911), (3, 113, 0.925), (3, 114, 0.97), (3, 115, 0.973), (3, 120, 0.714), (3, 121, 0.518), (3, 133, 0.921), (3, 155, 0.935), (3, 190, 0.949),(3, 191, 0.749), (3, 192, 0.948), (3, 193, 0.925), (3, 194, 0.953), (3, 195, 0.905), (3, 196, 0.913), (4, 19, 0.965), (4, 128, 0.962), (4, 129, 0.988), (4, 130, 0.982), (4, 131, 0.976), (4, 132, 0.863), (5, 20, 0.95), (5, 53, 0.911), (5, 80, 0.842), (5, 81, 0.962), (5, 82, 0.945), (5, 159, 0.78), (6, 21, 0.743), (7, 22, 0.886), (7, 23, 0.925), (7, 24, 0.925), (7, 25, 0.631), (7, 26, 0.891), (7, 27, 0.951), (7, 28, 0.947), (7, 29, 0.915), (7, 30, 0.923), (7, 31, 0.944), (7, 32, 0.905), (7, 33, 0.786), (7, 34, 0.907), (7, 35,0.934), (7, 36, 0.921), (7, 37, 0.892), (7, 38, 0.852), (7, 39, 0.877), (7, 40, 0.827), (7, 41, 0.894), (7, 42, 0.923), (7, 58, 0.859), (7, 59, 0.925), (7, 60, 0.924), (7, 61, 0.766), (7, 62, 0.799), (7, 63, 0.937), (7, 64, 0.984), (7, 65, 0.917), (7, 66, 0.946), (7, 67, 0.914), (7, 68, 0.917), (7, 69, 0.942), (7, 70, 0.936), (7, 75, 0.88), (7, 76, 0.945), (7, 77, 0.799), (7, 78, 0.912), (7, 79, 0.932), (7, 83, 0.884), (7, 84, 0.962), (7, 86, 0.866), (7, 87, 0.883), (7, 88, 0.894), (7, 89, 0.692), (7, 90, 0.896), (7, 91, 0.953), (7, 92, 0.791), (7, 96, 0.957), (7, 97, 0.954), (7, 98, 0.835), (7, 103, 0.872), (7, 104, 0.964), (7, 105, 0.943), (7, 106, 0.931), (7, 122, 0.884), (7, 123, 0.956), (7, 124, 0.919), (7, 125, 0.948), (7, 126, 0.898), (7, 127, 0.857), (7, 134, 0.941), (7, 137,0.894), (7, 140, 0.937), (7, 142, 0.887), (7, 143, 0.641), (7, 144, 0.923), (7, 145, 0.886), (7, 146, 0.91), (7, 147, 0.868), (7, 148, 0.795), (7, 151, 0.838), (7, 152, 0.947), (7, 153, 0.882), (7, 156, 0.805), (7, 157, 0.811), (7, 158, 0.963), (7, 160, 0.926), (7, 161, 0.912), (7, 162, 0.84), (7, 163, 0.87), (7, 164, 0.86), (7, 165, 0.9), (7, 166, 0.925), (7, 167, 0.946), (7, 168, 0.928), (7, 169, 0.945), (7, 170, 0.945), (7, 171, 0.885), (7, 172, 0.843), (7, 173, 0.953), (7, 174, 0.911), (7, 175, 0.938), (7, 176, 0.955), (7, 177, 0.982), (7, 178, 0.928), (7, 179, 0.897), (7, 180, 0.973), (7, 181, 0.932), (7, 182, 0.95), (7, 183, 0.848), (7, 184, 0.973), (7, 185, 0.898), (7, 186, 0.92), (7, 187, 0.93), (7, 188, 0.935), (7, 189, 0.928), (7, 197, 0.938), (7, 198, 0.919), (7, 199, 0.917), (7, 200, 0.897), (7, 201, 0.947), (7, 202, 0.832), (7, 203, 0.869), (7, 204, 0.903), (7, 205, 0.918), (7, 206, 0.905), (7, 207, 0.878), (7, 208, 0.868), (7, 209, 0.927), (7, 210, 0.903), (7, 211, 0.935), (7, 212, 0.801), (7, 213, 0.912), (7, 214, 0.823), (7, 215, 0.976), (7, 216, 0.895), (7, 217, 0.948), (7, 218, 0.894), (7, 219, 0.886), (7, 220, 0.988), (7, 221, 0.92), (7, 222, 0.871), (7, 223, 0.94), (7, 224, 0.877), (7, 225, 0.915), (7, 226, 0.862), (7, 227, 0.833), (7, 228, 0.753), (7, 229, 0.957), (7, 230, 0.913), (7, 231, 0.947), (7, 232, 0.953), (7, 233, 0.85), (7, 234, 0.95), (7, 235, 0.959), (7, 242, 0.906), (7, 243, 0.809), (7, 244, 0.919), (7, 245, 0.819), (7, 246, 0.816), (7, 247, 0.805), (7, 248, 0.87), (7, 249, 0.926), (8, 43, 0.942), (8, 149, 0.892), (8, 150, 0.973), (9, 44, 0.99), (9, 85, 0.97), (9, 236, 0.838), (9, 237, 0.978), (9, 238, 0.997), (9, 239, 0.987), (9, 240, 0.899), (9, 241, 0.989), (10, 99, 0.988), (10, 100, 0.973), (10, 101, 0.922), (10, 102, 0.924), (11, 46, 0.971), (11, 47, 0.871), (11, 50, 0.939), (11, 51, 0.927), (11, 52, 0.767), (11, 94, 0.92), (12, 48, 0.976), (12, 72, 0.968), (12, 73, 0.969), (12, 74, 0.889), (12, 93, 0.744), (13, 95, 0.988), (13, 136, 0.982), (13, 138, 0.991), (13, 139, 0.941), (14, 116, 0.989), (14, 117, 0.995), (14, 118, 0.849), (14, 119, 0.987), (15, 71, 0.997), (15, 141, 0.978), (15, 154, 0.995), (16, 54, 0.984), (16, 55, 0.966), (16, 56, 0.982), (16, 57, 0.785), (16, 155, 0.971), (17, 108, 0.974), (17, 109, 0.986), (17, 110, 0.913), (17, 111, 0.986), (17, 112, 0.519), (17, 113, 0.986), (17, 114, 0.944), (17, 115, 0.994), (17, 133, 0.848), (17, 190, 0.966), (17, 191, 0.824), (17, 192, 0.966), (17, 193, 0.857), (17, 194, 0.91), (17, 195, 0.972), (17, 196, 0.946), (18, 120, 0.869), (18, 121, 0.749), (19, 128, 0.954), (19, 129, 0.97), (19, 130, 0.965), (19, 131, 0.972), (19, 132, 0.928), (20, 53, 0.877), (20, 80, 0.876), (20, 81, 0.98), (20, 82, 0.898), (20, 159, 0.688), (23, 235, 0.811), (24, 63, 0.983), (24, 64, 0.851), (24, 65, 0.974), (24, 66, 0.967), (24, 103, 0.959), (24, 106, 0.951), (24, 188, 0.911), (24, 189, 0.955), (25, 77, 0.844), (26, 78, 0.743), (26, 79, 0.882), (26, 122, 0.925), (26, 123, 0.97), (26, 124, 0.875), (26, 142, 0.577), (26, 156, 0.922), (26, 157, 0.699), (27, 83, 0.809), (27, 84, 0.635), (27, 96, 0.933), (27, 97, 0.857), (27, 104, 0.861), (27, 105, 0.902), (28, 184, 0.887), (28, 185, 0.996), (28, 186, 0.993), (28, 187, 0.531), (29, 58, 0.76), (29, 59, 0.899), (29, 60, 0.78), (29, 61, 0.768), (29, 62, 0.656), (29, 75, 0.698), (29, 98, 0.5), (29, 144, 0.819), (29, 145, 0.888), (29, 146, 0.731), (29, 147, 0.743), (31, 160, 0.982), (31, 161, 0.995), (32, 68, 0.504), (32, 140, 0.888), (32, 199, 0.736), (33, 153, 0.849), (34, 148, 0.897), (34, 158, 0.771), (34, 207, 0.97), (34, 208, 0.972), (34, 209, 0.92), (34, 210, 0.867), (34, 211, 0.964), (34, 212, 0.977), (34, 213, 0.906), (34,214, 0.892), (34, 215, 0.837), (34, 216, 0.897), (34, 217, 0.97), (34, 218, 0.982), (34, 219, 0.785), (34, 220, 0.969), (34, 221, 0.954), (34, 222, 0.956), (34, 223, 0.883), (34, 224, 0.933), (34, 225, 0.934), (34, 226, 0.768), (34, 227, 0.787), (34, 228, 0.905), (34, 229, 0.931), (34, 230, 0.97), (34, 231, 0.928), (34, 232, 0.977), (34, 233, 0.889), (34, 249, 0.937), (35, 125, 0.788), (35, 162, 0.975), (35, 164, 0.951), (35, 165, 0.935), (35, 166, 0.984), (35, 168, 0.918), (35, 169, 0.603), (35, 170, 0.979), (35, 171, 0.884), (35, 172, 0.918), (35, 173, 0.947), (35, 174, 0.877), (35, 175, 0.942), (35, 176, 0.992), (35, 177, 0.858), (35, 178, 0.974), (35, 180, 0.938), (35, 181, 0.944), (35, 182, 0.928), (35, 197, 0.657), (36, 167, 0.891), (36, 179, 0.979), (38, 143, 0.89), (39, 183, 0.938), (40, 242, 0.878), (40, 243, 0.591), (40, 244, 0.954), (40, 245, 0.957), (40, 246, 0.952), (40, 247, 0.992), (40, 248, 0.702), (41, 86, 0.845), (41, 87, 0.872), (41, 88, 0.967), (41, 89, 0.916), (41, 91, 0.885), (41, 92, 0.692), (41, 126, 0.892), (41, 127, 0.833), (41, 151, 0.97), (41, 152, 0.903), (42, 200, 0.803), (42, 201, 0.99), (42, 202, 0.716), (42, 203, 0.934), (42, 204, 0.676), (42, 205, 0.83), (42, 206, 0.667), (43, 149, 0.899), (43, 150, 0.97), (44, 85, 0.937), (44, 236, 0.846), (44, 237, 0.982), (44, 238, 0.993), (44, 239, 0.971), (44, 240, 0.895), (44, 241, 0.992), (45, 99, 0.989), (45, 100, 0.963), (45, 101, 0.947), (45, 102, 0.943), (46, 50, 0.942), (46, 51, 0.915), (46, 52, 0.74), (47, 94, 0.651), (48, 72, 0.981), (48, 73, 0.913), (48, 74, 0.94), (7, 5, 0.723), (7, 20, 0.773), (7, 53, 0.803), (7, 80, 0.852), (7, 81, 0.773), (7, 82, 0.668), (7, 159, 0.68), (15, 2, 0.983), (34, 30, 0.855), (34, 42, 0.77), (34, 69, 0.706), (34, 200, 0.785), (34, 201, 0.886), (34, 202, 0.814), (34, 204, 0.795), (34, 205, 0.72), (34, 206, 0.922), (35, 36, 0.709), (35, 167, 0.793), (35, 179, 0.793), (36, 165, 0.777), (45, 10, 0.961), (46, 47, 0.843), (46, 94, 0.917), (54, 56, 0.683), (61, 145, 0.678), (63, 64, 0.558), (63, 103, 0.79), (67, 37, 0.928), (71, 154, 0.899), (72, 74, 0.772), (78, 76, 0.712), (78, 79, 0.748), (78, 156, 0.517), (79, 156, 0.583), (85, 238, 0.664), (88, 86, 0.906), (88, 87, 0.644), (88, 89, 0.608), (88, 92, 0.723), (88, 151, 0.95), (88, 152, 0.545), (93, 49, 0.696), (99, 100, 0.756), (99, 102, 0.715), (108, 111, 0.709), (115, 108, 0.894), (115, 109, 0.937), (115, 111, 0.927), (115, 113, 0.776), (121, 120, 0.555), (129, 130, 0.682), (134, 22, 0.99), (135, 6, 0.774), (135, 21, 0.608), (136, 95, 0.834), (146, 144, 0.528), (160, 161, 0.984), (166, 164, 0.817), (178, 174, 0.903), (178, 176, 0.76), (178, 180, 0.892), (179, 167, 0.615), (186, 185, 0.98), (189, 188, 0.619), (192, 190, 0.641), (193, 190, 0.503), (203, 201, 0.915), (204, 203, 0.518), (212, 225, 0.693), (217, 216, 0.681), (222, 221, 0.757), (222, 223, 0.646), (222, 228, 0.596), (233, 232, 0.596), (234, 23, 0.94), (234, 235, 0.798), (248, 245, 0.525)]
num_classes = 250

dataset = 'cars'
w_edges = [(0, 9, 0.741), (0, 10, 0.999), (0, 11, 0.883), (0, 12, 0.999), (0, 13, 0.986), (0, 14, 0.999), (0, 15, 0.996), (0, 16, 0.981), (0, 17, 0.993), (0, 18, 0.967), (0, 19, 0.986), (0, 20, 0.99), (0, 21, 0.984), (0, 22, 0.995), (0, 23, 0.993), (0, 24, 0.998), (0, 25, 0.996), (0, 26, 0.993), (1, 27, 0.904), (1, 28, 0.908), (1, 29, 0.986), (1, 30, 0.992), (1, 31, 0.997), (1, 32, 0.972), (1, 33, 0.97), (1, 34, 0.978), (1, 35, 0.987), (1, 36, 0.526), (1, 37, 0.955), (1, 38, 0.98), (1, 39, 0.992), (1, 40, 0.983), (1, 41, 0.997), (1, 42, 0.965), (1, 43, 0.919), (1, 44, 0.698), (1, 45, 0.972), (1, 46, 0.994), (1, 47, 0.978), (1, 48, 0.458), (1, 49, 0.994), (1, 50, 0.996), (1, 52, 0.932), (2, 53, 0.985), (2, 54, 0.97), (2, 55, 0.948), (2, 56, 0.97), (2, 57, 0.957), (2, 58, 0.981), (2, 59, 0.974),(2, 60, 0.941), (2, 61, 0.649), (2, 62, 0.898), (2, 63, 0.976), (2, 64, 0.985), (2, 65, 0.939), (2, 66, 0.958), (2, 67, 0.961), (2, 68, 0.959), (2, 69, 0.973), (2, 70, 0.947), (2, 71, 0.977), (2, 72, 0.978), (2, 73, 0.771), (2, 74, 0.955), (2, 75, 0.982), (2, 76, 0.985), (2, 77, 0.953), (2, 78, 0.976), (2, 79, 0.99), (2, 80, 0.994), (2, 81, 0.991), (2, 82, 0.966), (2, 83, 0.985), (2, 84, 0.995), (2, 85, 0.987), (2, 86, 0.871), (3, 87, 0.93), (3, 89, 0.465), (3, 90, 0.922), (3, 91, 0.923), (3, 92, 0.983), (3, 93, 0.898), (3,94, 0.934), (3, 95, 0.859), (3, 96, 0.647), (3, 97, 0.961), (3, 98, 0.981), (3, 99, 0.832), (4, 100, 0.765), (4, 101, 0.898), (4, 102, 0.981), (4, 103, 0.778), (4, 104, 0.93), (4, 105, 0.936), (4, 106, 0.949), (5, 107, 0.85), (5, 108, 0.932), (5, 109, 0.939), (5, 110, 0.934), (5, 111, 0.727), (5, 112, 0.588), (5, 113, 0.879), (5, 114, 0.841), (5, 115, 0.917), (5, 116, 0.925), (5, 117, 0.697), (5, 118, 0.763), (5, 119, 0.883), (5, 120, 0.88), (5, 121, 0.932), (5, 122, 0.984), (5, 123, 0.959), (5, 124, 0.938), (5, 125, 0.953), (5, 126, 0.923), (5, 127, 0.924), (5, 128, 0.961), (5, 129, 0.918), (5, 130, 0.403), (5, 131, 0.502), (5, 132, 0.418), (5, 133, 0.95), (5, 134, 0.869), (5, 135, 0.876), (5, 136, 0.841), (5, 137, 0.943), (5, 138, 0.614), (5, 139, 0.967), (5, 140, 0.904), (5, 141, 0.938), (5, 142, 0.984), (5, 143, 0.937), (5, 144, 0.943), (5, 145, 0.917), (5, 146, 0.963), (5, 147, 0.794), (5, 148, 0.923), (5, 149, 0.964), (5, 150, 0.935), (5, 151, 0.945), (5, 152, 0.68), (5, 153, 0.879), (5, 154, 0.952), (5, 155, 0.944), (5, 156, 0.954), (6,157, 0.92), (6, 158, 0.915), (6, 159, 0.941), (6, 160, 0.906), (6, 161, 0.981), (6, 162, 0.989), (6, 163, 0.938), (6, 164, 0.935), (6, 165, 0.973), (6, 166, 0.995), (6, 167, 0.983), (6, 168, 0.928), (6, 169, 0.984), (6, 170, 0.964), (6, 171, 0.991), (6, 172, 0.967), (6, 173, 0.98), (6, 174, 0.974), (6, 175, 0.974), (6, 176, 0.989), (6, 177, 0.991), (6, 178, 0.991), (6, 179, 0.978), (6, 180, 0.997), (6, 181, 0.989), (6, 182, 0.98), (6, 183, 0.989), (6, 184, 0.997), (6, 185, 0.997), (6, 186, 0.948), (6, 187, 0.981), (6, 188, 0.975), (6, 189, 0.992), (6, 190, 0.995), (6, 191, 0.977), (7, 192, 0.997), (7, 193, 0.998), (7, 194, 0.997), (7, 195, 0.995), (7, 196, 0.997), (7, 197, 0.982), (8, 199, 0.609), (8, 200, 0.686), (8, 201, 0.78), (8, 202, 0.906), (8, 203, 0.936), (8, 204, 0.696), (2,36, 0.723), (2, 51, 0.771), (2, 88, 0.926), (2, 89, 0.808), (2, 130, 0.553), (2, 131, 0.467), (2, 132, 0.56), (3, 152, 0.372), (5, 48, 0.614), (6, 9, 0.457), (6, 11, 0.526), (7, 204, 0.361), (10, 11, 0.729), (10, 12, 1.0), (10, 13, 0.983), (10, 14, 1.0), (10, 15, 0.999), (10, 24, 0.961), (11, 9, 0.731), (14, 12, 0.683), (14, 15, 0.663), (19, 17, 0.906), (22, 20, 0.412), (22, 23, 0.934), (26, 25, 0.88), (28, 27, 0.879), (29, 30, 0.775), (33, 28, 0.552), (33, 31, 0.89), (33, 32, 0.997), (33, 34, 0.961), (38, 45, 0.991), (43, 44, 0.423), (44, 73, 0.826), (49, 46, 0.236), (55, 77, 0.342), (57, 60, 0.288), (59, 56, 0.81), (61, 62, 0.371), (61, 117, 0.717), (62, 118, 0.516), (64, 63, 0.834), (65, 36, 0.911), (66, 67, 0.786), (74, 70, 0.465), (82, 55, 0.993), (86, 51, 0.971), (88, 57, 0.882), (88, 60, 0.614), (100, 106, 0.962), (108, 110, 0.978), (111, 112, 0.995), (111, 198, 0.946), (112, 198, 0.719), (113, 114, 0.68), (113, 115, 0.994), (114, 115, 0.932), (128, 125, 0.71), (131, 130, 0.983), (136, 138, 0.971), (140, 141, 0.954), (145, 144, 0.759), (149, 148, 0.992), (152, 95, 0.888), (155, 154, 0.781), (160, 158, 0.934), (160, 159, 0.961), (165, 174, 0.495), (167, 170, 0.636), (175, 188, 0.317), (181, 183, 0.356), (182, 157, 0.921), (184, 185, 0.999), (187, 186, 0.559), (192, 193, 0.996), (192, 195, 0.999), (194, 196, 0.745), (195, 193, 0.998), (201, 202, 0.993)]
num_classes = 205

dataset = 'cifar'
w_edges = [(0, 20, 0.631), (0, 21, 0.885), (0, 22, 0.786), (0, 23, 0.708), (0, 24, 0.909), (1, 25, 0.908), (1, 26, 0.763), (1, 27, 0.815), (1, 28, 0.714), (1, 29, 0.886), (2, 30, 0.927), (2, 31, 0.955), (2, 32, 0.942), (2, 33, 0.923), (2, 34, 0.926), (3, 35, 0.921), (3, 36,0.83), (3, 37, 0.936), (3, 38, 0.931), (3, 39, 0.956), (4, 40, 0.928), (4, 41, 0.854), (4, 42, 0.954), (4, 43, 0.922), (4, 44, 0.857), (5, 45, 0.916), (5, 46, 0.943), (5, 47, 0.746), (5, 48, 0.953), (5, 49, 0.878), (6, 50, 0.928), (6, 51, 0.963), (6, 52, 0.869), (6, 53, 0.821), (6, 54, 0.92), (7, 55, 0.932), (7, 56, 0.912), (7, 57, 0.932), (7, 58, 0.869), (7, 59, 0.951), (8, 60, 0.752), (8, 61, 0.899), (8, 62, 0.926), (8, 63, 0.918), (8, 64, 0.912), (9, 65, 0.856), (9, 66, 0.909), (9, 67, 0.854), (9, 68, 0.936), (9, 69, 0.93), (10, 70, 0.911), (10, 71, 0.706), (10, 72, 0.89), (10, 73, 0.934), (10, 74, 0.944), (11, 75, 0.932), (11, 76, 0.91), (11, 77, 0.922), (11, 78, 0.84), (11, 79, 0.863), (12, 80, 0.807), (12, 81, 0.678), (12, 82, 0.756), (12, 83, 0.786), (12, 84, 0.869), (13, 85, 0.739), (13, 86, 0.651), (13, 87, 0.762), (13, 88, 0.726), (13, 89, 0.665), (14, 90, 0.87), (14, 91, 0.923), (14, 92, 0.93), (14, 93, 0.856), (14, 94, 0.914), (15, 95, 0.811), (15, 96, 0.807), (15, 97, 0.887), (15, 98, 0.853), (15, 99, 0.872), (16, 100, 0.969), (16, 101, 0.917), (16, 102, 0.861), (16, 103, 0.672), (16, 104, 0.886), (17, 105, 0.962), (17, 106, 0.973), (17, 107, 0.905), (17, 108, 0.865), (17, 109, 0.897), (18, 110, 0.964), (18, 111, 0.916), (18, 112, 0.943), (18, 113, 0.944), (18, 114, 0.829), (19, 115, 0.814), (19, 116, 0.832), (19, 117, 0.724), (19, 118, 0.869), (19, 119, 0.898), (106, 105, 0.461)]

num_classes = 120

edges = [(src, des) for src, des, _ in w_edges]
true_edges = get_true_edges(dataset, False)
# edges = true_edges

g = nx.DiGraph()
g.add_edges_from(edges)


src_to_des = {i:[] for i in g.nodes}
des_to_src = {i:[] for i in g.nodes}

for src, des in edges:
    src_to_des[src].append(des)
    des_to_src[des].append(src)
# print(des_to_src)

new_des_to_src = {i:[] for i in g.nodes}
new_edges = []
for chd, pars in des_to_src.items():
    reduced_pars = []
    if len(pars) == 0:
        continue
    elif len(pars) == 1:
        new_edges.append((pars[0], chd))
        new_des_to_src[chd].append(pars[0])

    elif len(pars) == 2:
        if (pars[0], pars[1]) in edges:
            new_edges.append((pars[1], chd))
            new_des_to_src[chd].append(pars[1])

        elif (pars[1], pars[0]) in edges:
            new_edges.append((pars[0], chd))
            new_des_to_src[chd].append(pars[0])

        else:
            new_edges.append((pars[0], chd))
            new_des_to_src[chd].append(pars[0])
            new_edges.append((pars[1], chd))
            new_des_to_src[chd].append(pars[1])
    else:
        if len(pars) == 4: print(chd, pars)
        for par in pars:
            par_childs = src_to_des[par]
            if len(set(par_childs).intersection(pars)) == 0:
                new_edges.append((par, chd))
                new_des_to_src[chd].append(par)
# print(new_des_to_src)

# exit()
lv1 = [des for des, srcs in new_des_to_src.items() if len(srcs) == 0]

new_g = nx.DiGraph()
new_g.add_edges_from(new_edges)
wo_edge = set([i for i in range(num_classes)]) - set(new_g.nodes)
lv1 += list(wo_edge)
new_g.add_nodes_from(set([i for i in range(num_classes)]) - set(new_g.nodes))

# print(lv1)

root_edges = [('ROOT', l1) for l1 in lv1]
new_g.add_edges_from(root_edges)

# exit()
# print(new_g.nodes)
# print(new_g.edges)
# exit()
pos = graphviz_layout(new_g, prog="twopi")
labeldict={node:i for i, node in enumerate(new_g.nodes)}
node_color = ['lightgray'] * num_classes
root_node_color = ['white']
edge_color = ['black'] * len(new_edges)
root_edge_color = ['black'] * len(root_edges)

node_color += root_node_color
# edge_color += root_edge_color
print(len(edges),len(g.edges), len(root_edges))
plt.figure(figsize=(38,40))
# nx.draw(new_g, with_labels=True, pos=pos, node_color=node_color, alpha=0.8, font_size=20, font_weight='bold', edge_color=edge_color)
nx.draw_networkx_nodes(new_g, pos=pos, node_color=node_color, alpha=1, node_size=900)
# nx.draw_networkx_nodes(new_g, pos=pos, node_color=root_node_color, alpha=1, node_size=700, nodelist=list(new_g.nodes)[-1])

nx.draw_networkx_edges(new_g, pos=pos, width=3, edge_color=edge_color, edgelist=new_edges) # main
nx.draw_networkx_edges(new_g, pos=pos, width=3, edge_color=root_edge_color, edgelist=root_edges, style='dotted') # from root
nx.draw_networkx_labels(new_g, pos=pos, font_size=20, font_weight='normal')

from time import time
plt.tight_layout()
image_name = '{}_true.png'.format(dataset)
image_name = '{}_hw.png'.format(dataset)

image_path = PATH_CHECK(ospj('saved_multi', 'tree', image_name))
plt.savefig(image_path)
# plt.show()





exit()









